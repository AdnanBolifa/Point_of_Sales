<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEnter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>